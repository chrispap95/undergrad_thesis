#ifndef __CINT__
#include <TMath.h>
#include <TTree.h>
#include <TFile.h>
#include <TClonesArray.h>
#include <TParticle.h>
#endif

Int_t FindLastParticle(Int_t iPart, Int_t pdgCode, TClonesArray* particles) { //Find the last Jpsi
	while (1) {
		TParticle* part = reinterpret_cast< TParticle* >(particles->At(iPart));
		Int_t daughter0id = part->GetDaughter(0);
		Int_t daughter1id = part->GetDaughter(1);
		Bool_t daughter0validity = true;
		Bool_t daughter1validity = true;
		if (daughter0id >= 0) {
			TParticle* daughter0 = reinterpret_cast< TParticle* >(particles->At(daughter0id));
			if (daughter0->GetPdgCode() == pdgCode) {
				iPart = part->GetDaughter(0);
				daughter0validity = false;
				continue;
			}
		}
		if (daughter1id >= 0) {
			TParticle* daughter1 = reinterpret_cast< TParticle* >(particles->At(daughter1id));
			if (daughter1->GetPdgCode() == pdgCode) {
				iPart = part->GetDaughter(1);
				daughter1validity = false;
				continue;
			}
		}
		if (daughter0validity && daughter1validity) break;
	}
	return iPart;
}

void generator_hists() {
	TStopwatch t;

	//Define all the histograms
	TCanvas* c2 = new TCanvas("c2", "trial analysis", 1);

	TH1D* h01b = new TH1D("h01b","p_{T} of J/#psi;p_{T} (GeV/c)",100, 0, 100);
	TH1D* h02maxb = new TH1D("h02maxb","p_{T} of #mu max;p_{T} (GeV/c)",100, 0, 60);
	TH1D* h02minb = new TH1D("h02minb","p_{T} of #mu min;p_{T} (GeV/c)",100, 0, 60);
	THStack* h02b = new THStack("h02b","p_{T} of #mu;p_{T} (GeV/c)");
	TH1D* h00s = new TH1D("h00s","p_{T} of Higgs;p_{T} (GeV/c)",100, 0, 400);
	TH1D* h01s = new TH1D("h01s","p_{T} of J/#psi;p_{T} (GeV/c)",100, 0, 240);
	TH1D* h02maxs = new TH1D("h02maxs","p_{T} of #mu max;p_{T} (GeV/c)",100, 0, 150);
	TH1D* h02mins = new TH1D("h02mins","p_{T} of #mu min;p_{T} (GeV/c)",100, 0, 150);
	THStack* h02s = new THStack("h02s","p_{T} of #mu;p_{T} (GeV/c)");
	TH1D* h03s = new TH1D("h03s","p_{T} of #gamma;p_{T} (GeV/c)",100, 0, 240);

	TH1D* h11b = new TH1D("h11b","y of J/#psi;y",100,-7,7);
	TH1D* h12maxb = new TH1D("h12maxb","y of #mu max;y",100,-7,7);
	TH1D* h12minb = new TH1D("h12minb","y of #mu min;y",100,-7,7);
	THStack* h12b = new THStack("h12b","y of #mu;y");
	TH1D* h10s = new TH1D("h10s","y of Higgs;y",100,-7,7);
	TH1D* h11s = new TH1D("h11s","y of J/#psi;y",100,-7,7);
	TH1D* h12maxs = new TH1D("h12maxs","y of #mu max;y",100,-7,7);
	TH1D* h12mins = new TH1D("h12mins","y of #mu min;y",100,-7,7);
	THStack* h12s = new THStack("h12s","y of #mu;y");
	TH1D* h13s = new TH1D("h13s","y of #gamma;y",100,-7,7);

	TH1D* h21b = new TH1D("h21b","#phi of J/#psi;#phi",100, 0, 6.3); h21b->GetYaxis()->SetRangeUser(0,1500);
	TH1D* h22maxb = new TH1D("h22maxb","#phi of #mu max;#phi",100, 0, 6.3); h22maxb->GetYaxis()->SetRangeUser(0,1500);
	TH1D* h22minb = new TH1D("h22minb","#phi of #mu min;#phi",100, 0, 6.3); h22minb->GetYaxis()->SetRangeUser(0,1500);
	THStack* h22b = new THStack("h22b","#phi of #mu;#phi");
	TH1D* h20s = new TH1D("h20s","#phi of Higgs;#phi",100, 0, 6.3); h20s->GetYaxis()->SetRangeUser(0,150);
	TH1D* h21s = new TH1D("h21s","#phi of J/#psi;#phi",100, 0, 6.3); h21s->GetYaxis()->SetRangeUser(0,150);
	TH1D* h22maxs = new TH1D("h22maxs","#phi of #mu max;#phi",100, 0, 6.3); h22maxs->GetYaxis()->SetRangeUser(0,150);
	TH1D* h22mins = new TH1D("h22mins","#phi of #mu min;#phi",100, 0, 6.3); h22mins->GetYaxis()->SetRangeUser(0,150);
	THStack* h22s = new THStack("h22s","#phi of #mu;#phi");
	TH1D* h23s = new TH1D("h23s","#phi of #gamma;#phi",100, 0, 6.3); h23s->GetYaxis()->SetRangeUser(0,150);

	TH1D* h31b = new TH1D("h31b","E of J/#psi;E (GeV)",100, 0, 1000);
	TH1D* h32maxb = new TH1D("h32maxb","E of #mu max;E (GeV)",100, 0, 200);
	TH1D* h32minb = new TH1D("h32minb","E of #mu min;E (GeV)",100, 0, 200);
	THStack* h32b = new THStack("h32b","E of #mu;E (GeV)");
	TH1D* h30s = new TH1D("h30s","E of Higgs;E (GeV)",100, 0, 2000);
	TH1D* h31s = new TH1D("h31s","E of J/#psi;E (GeV)",100, 0, 1000);
	TH1D* h32maxs = new TH1D("h32maxs","E of #mu max;E (GeV)",100, 0, 600);
	TH1D* h32mins = new TH1D("h32mins","E of #mu min;E (GeV)",100, 0, 600);
	THStack* h32s = new THStack("h32s","E of #mu;E (GeV)");
	TH1D* h33s = new TH1D("h33s","E of #gamma;E (GeV)",100, 0, 1000);

	TH1D* h41b = new TH1D("h41b","#eta of J/#psi;#eta",100,-7,7);
	TH1D* h42maxb = new TH1D("h42maxb","#eta of #mu max;#eta",100,-7,7);
	TH1D* h42minb = new TH1D("h42minb","#eta of #mu min;#eta",100, -7,7);
	THStack* h42b = new THStack("h42b","#eta of #mu;#eta");
	TH1D* h40s = new TH1D("h40s","#eta of Higgs;#eta",100,-12,12);
	TH1D* h41s = new TH1D("h41s","#eta of J/#psi;#eta",100,-7,7);
	TH1D* h42maxs = new TH1D("h42maxs","#eta of #mu max;#eta",100,-7,7);
	TH1D* h42mins = new TH1D("h42mins","#eta of #mu min;#eta",100,-7,7);
	THStack* h42s = new THStack("h42s","#eta of #mu;#eta");
	TH1D* h43s = new TH1D("h43s","#eta of #gamma;#eta",100,-7,7);

	//Insert the .root file and get the tree and its Event branch
        TFile* f1 = TFile::Open("/data/cpapage/jpsiInclusive-gen100K.root");
        TTree* t1 = dynamic_cast< TTree* >(f1->Get("Pythia"));
        TClonesArray* particles1 = new TClonesArray("Event");
        t1->SetBranchAddress("Event", &particles1);
        for (Long64_t i = 0; i < t1->GetEntries(); ++i) { // This is the Event loop 
                t1->GetEntry(i);
		Int_t iJpsi = 0;
		for (Int_t k = 0; k < particles1->GetEntries(); ++k) {
			TParticle* temp = reinterpret_cast< TParticle* >(particles1->At(k));
			if (temp->GetPdgCode() == 443) {
				iJpsi = k;
				break;
			}
		}
		iJpsi = FindLastParticle(iJpsi, 443, particles1);
		Int_t iMuon = iJpsi;
		iMuon = FindLastParticle(iMuon, 13, particles1);
		Int_t iAntimuon = iJpsi;
		iAntimuon = FindLastParticle(iAntimuon, -13, particles1);
		
		TParticle* jpsi = reinterpret_cast< TParticle* >(particles1->At(iJpsi));
		TParticle* muon = reinterpret_cast< TParticle* >(particles1->At(iMuon));
		TParticle* antimuon = reinterpret_cast< TParticle* >(particles1->At(iAntimuon));
		h01b->Fill(jpsi->Pt());
		h11b->Fill(jpsi->Y());
		h21b->Fill(jpsi->Phi());
		h31b->Fill(jpsi->Energy());
		h41b->Fill(jpsi->Eta());
		if (muon->Pt() > antimuon->Pt()) {
			h02maxb->Fill(muon->Pt());
			h12maxb->Fill(muon->Y());
			h22maxb->Fill(muon->Phi());
			h32maxb->Fill(muon->Energy());
			h42maxb->Fill(muon->Eta());
			h02minb->Fill(antimuon->Pt());
			h12minb->Fill(antimuon->Y());
			h22minb->Fill(antimuon->Phi());
			h32minb->Fill(antimuon->Energy());
			h42minb->Fill(antimuon->Eta());
		}else {
			h02maxb->Fill(antimuon->Pt());
			h12maxb->Fill(antimuon->Y());
			h22maxb->Fill(antimuon->Phi());
			h32maxb->Fill(antimuon->Energy());
			h42maxb->Fill(antimuon->Eta());
			h02minb->Fill(muon->Pt());
			h12minb->Fill(muon->Y());
			h22minb->Fill(muon->Phi());
			h32minb->Fill(muon->Energy());
			h42minb->Fill(muon->Eta());
		}
	}

	h02b->Add(h02maxb);
	h02b->Add(h02minb);
	h12b->Add(h12maxb);
	h12b->Add(h12minb);
	h22b->Add(h22maxb);
	h22b->Add(h22minb);
	h32b->Add(h32maxb);
	h32b->Add(h32minb);
	h42b->Add(h42maxb);
	h42b->Add(h42minb);

	c2->Divide(2,2);
	c2->cd(1); h01b->Draw();
	c2->cd(2); h11b->Draw();
	c2->cd(3); h21b->Draw();
	c2->cd(4); h41b->Draw();
        c2->Print("generator_bkg_jpsi.eps");
	c2->cd(1); h02b->Draw("nostack plc");
	c2->cd(2); h12b->Draw("nostack plc"); 
	c2->cd(3); h22b->Draw("nostack plc"); 
	c2->cd(4); h42b->Draw("nostack plc"); 
        c2->Print("generator_bkg_mu.eps");
	c2->Clear();
	h32b->Draw("nostack plc"); 
        c2->Print("generator_bkg_mu_energy.eps");
	h31b->Draw(); 
        c2->Print("generator_bkg_jpsi_energy.eps");

	//Insert the .root file and get the tree and its Event branch
        TFile* f2 = TFile::Open("/data/cpapage/higgsTojpsiGamma-gen8K.root");
        TTree* t2 = dynamic_cast< TTree* >(f2->Get("Pythia"));
        TClonesArray* particles2 = new TClonesArray("Event");
        t2->SetBranchAddress("Event", &particles2);
        for (Long64_t i = 0; i < t2->GetEntries(); ++i) { // This is like the Event loop 
                t2->GetEntry(i);		
		Int_t iHiggs = 0;
		for (Long64_t l = 0; l < particles2->GetEntries(); ++l) { //This is a particle loop
			TParticle* part = reinterpret_cast< TParticle* >(particles2->At(l));
			if (part->GetPdgCode() == 25) {
				iHiggs = l;
				break;
			}
		}
		iHiggs = FindLastParticle(iHiggs, 25, particles2);
		Int_t iGamma = iHiggs;
		iGamma = FindLastParticle(iGamma, 22, particles2);
		Int_t iJpsi = iHiggs;
		iJpsi = FindLastParticle(iJpsi, 443, particles2);
		Int_t iMuon = iJpsi;
		iMuon = FindLastParticle(iMuon, 13, particles2);
		Int_t iAntimuon = iJpsi;
		iAntimuon = FindLastParticle(iAntimuon, -13, particles2);

		TParticle* higgs = reinterpret_cast< TParticle* >(particles2->At(iHiggs));
		TParticle* jpsi = reinterpret_cast< TParticle* >(particles2->At(iJpsi));
		TParticle* muon = reinterpret_cast< TParticle* >(particles2->At(iMuon));
		TParticle* antimuon = reinterpret_cast< TParticle* >(particles2->At(iAntimuon));
		TParticle* gamma = reinterpret_cast< TParticle* >(particles2->At(iGamma));
		h00s->Fill(higgs->Pt());
		h10s->Fill(higgs->Y());
		h20s->Fill(higgs->Phi());
		h30s->Fill(higgs->Energy());
		h40s->Fill(higgs->Eta());
		h03s->Fill(gamma->Pt());
		h13s->Fill(gamma->Y());
		h23s->Fill(gamma->Phi());
		h33s->Fill(gamma->Energy());
		h43s->Fill(gamma->Eta());
		h01s->Fill(jpsi->Pt());
		h11s->Fill(jpsi->Y());
		h21s->Fill(jpsi->Phi());
		h31s->Fill(jpsi->Energy());
		h41s->Fill(jpsi->Eta());
		if (muon->Pt() > antimuon->Pt()) {
			h02maxs->Fill(muon->Pt());
			h12maxs->Fill(muon->Y());
			h22maxs->Fill(muon->Phi());
			h32maxs->Fill(muon->Energy());
			h42maxs->Fill(muon->Eta());
			h02mins->Fill(antimuon->Pt());
			h12mins->Fill(antimuon->Y());
			h22mins->Fill(antimuon->Phi());
			h32mins->Fill(antimuon->Energy());
			h42mins->Fill(antimuon->Eta());
		}else {
			h02maxs->Fill(antimuon->Pt());
			h12maxs->Fill(antimuon->Y());
			h22maxs->Fill(antimuon->Phi());
			h32maxs->Fill(antimuon->Energy());
			h42maxs->Fill(antimuon->Eta());
			h02mins->Fill(muon->Pt());
			h12mins->Fill(muon->Y());
			h22mins->Fill(muon->Phi());
			h32mins->Fill(muon->Energy());
			h42mins->Fill(muon->Eta());
		}
	}

	h02s->Add(h02maxs);
	h02s->Add(h02mins);
	h12s->Add(h12maxs);
	h12s->Add(h12mins);
	h22s->Add(h22maxs);
	h22s->Add(h22mins);
	h32s->Add(h32maxs);
	h32s->Add(h32mins);
	h42s->Add(h42maxs);
	h42s->Add(h42mins);

	c2->Divide(2,2);
	c2->cd(1); h00s->Draw();
	c2->cd(2); h10s->Draw();
	c2->cd(3); h20s->Draw();
	c2->cd(4); h40s->Draw();
        c2->Print("generator_signal_higgs.eps");
	c2->cd(1); h03s->Draw();
	c2->cd(2); h13s->Draw();
	c2->cd(3); h23s->Draw();
	c2->cd(4); h43s->Draw();
        c2->Print("generator_signal_gamma.eps");
	c2->cd(1); h01s->Draw();
	c2->cd(2); h11s->Draw();
	c2->cd(3); h21s->Draw();
	c2->cd(4); h41s->Draw();
        c2->Print("generator_signal_jpsi.eps");
	c2->cd(1); h02s->Draw("nostack plc");
	c2->cd(2); h12s->Draw("nostack plc"); 
	c2->cd(3); h22s->Draw("nostack plc"); 
	c2->cd(4); h42s->Draw("nostack plc"); 
        c2->Print("generator_signal_mu.eps");
	c2->cd(4); h32s->Draw("nostack plc"); 
	c2->cd(2); h31s->Draw();
	c2->cd(3); h33s->Draw();
	c2->cd(1); h30s->Draw();
        c2->Print("generator_signal_energy.eps");

	t.Stop();
	t.Print();
}
